{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gpsha\\\\Downloads\\\\vaccine-dapp-main\\\\vaccine-dapp-main\\\\client\\\\src\\\\Screens\\\\VaccCenter\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport { ButtonComp, RootContainer, SelectComp, TextInpComp } from '../../components/Shared';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VaccCenter = () => {\n  _s();\n  const {\n    state: {\n      accounts,\n      contract,\n      vaccines\n    }\n  } = useEth();\n  const [selectedVaccine, setSelectedVaccine] = useState(0);\n  const [endedVaccines, setEndedVaccines] = useState([]);\n  const [loader, showloader] = useState(false);\n  useEffect(() => {\n    var _ended$;\n    let _ended = vaccines === null || vaccines === void 0 ? void 0 : vaccines.filter(vacc => vacc.state == \"3\");\n    setEndedVaccines(_ended);\n    setSelectedVaccine(parseInt((_ended$ = _ended[0]) === null || _ended$ === void 0 ? void 0 : _ended$.id));\n  }, [vaccines]);\n  const handleSelect = val => {\n    setSelectedVaccine(val);\n  };\n  const receiveContainer = async () => {\n    try {\n      var _contract$methods, _contract$methods$Rec;\n      showloader(true);\n      const received = await (contract === null || contract === void 0 ? void 0 : (_contract$methods = contract.methods) === null || _contract$methods === void 0 ? void 0 : (_contract$methods$Rec = _contract$methods.ReceiveContainer(selectedVaccine)) === null || _contract$methods$Rec === void 0 ? void 0 : _contract$methods$Rec.send({\n        from: accounts[0]\n      }));\n      if (received) {\n        const _ended = vaccines === null || vaccines === void 0 ? void 0 : vaccines.filter(vacc => vacc.state == \"3\" && vacc.id != selectedVaccine);\n        setEndedVaccines(_ended);\n        if (_ended.length) setSelectedVaccine(parseInt(_ended[0].id));\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      showloader(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(RootContainer, {\n    heading: \"Vaccination Center\",\n    selectedVaccine: selectedVaccine,\n    address: accounts && accounts[0],\n    children: [/*#__PURE__*/_jsxDEV(SelectComp, {\n      vaccines: endedVaccines,\n      selectedVaccine: selectedVaccine,\n      handleSelect: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(ButtonComp, {\n      disabled: loader,\n      loader: loader,\n      text: \"Container Received\",\n      onClick: receiveContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 8\n  }, this);\n};\n_s(VaccCenter, \"gvpbgtYWUUIBsbjz0nQ8H87qsNY=\", false, function () {\n  return [useEth];\n});\n_c = VaccCenter;\nexport default VaccCenter;\nvar _c;\n$RefreshReg$(_c, \"VaccCenter\");","map":{"version":3,"names":["useState","useEffect","useEth","ButtonComp","RootContainer","SelectComp","TextInpComp","jsxDEV","_jsxDEV","VaccCenter","_s","state","accounts","contract","vaccines","selectedVaccine","setSelectedVaccine","endedVaccines","setEndedVaccines","loader","showloader","_ended$","_ended","filter","vacc","parseInt","id","handleSelect","val","receiveContainer","_contract$methods","_contract$methods$Rec","received","methods","ReceiveContainer","send","from","length","err","console","log","heading","address","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gpsha/Downloads/vaccine-dapp-main/vaccine-dapp-main/client/src/Screens/VaccCenter/index.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport {ButtonComp,RootContainer,SelectComp,TextInpComp} from '../../components/Shared';\nconst VaccCenter=()=>{\n    const { state: { accounts,contract,vaccines} } = useEth();\n    const [selectedVaccine,setSelectedVaccine]=useState(0);  \n    const [endedVaccines,setEndedVaccines]=useState([]);\n    const [loader,showloader]=useState(false);\n    \n    useEffect(()=>{\n     let _ended= vaccines?.filter(vacc=>(vacc.state==\"3\"));\n     setEndedVaccines(_ended);\n     setSelectedVaccine(parseInt(_ended[0]?.id))\n  \n    \n    },[vaccines])\n    const handleSelect=(val)=>{\n      setSelectedVaccine(val)\n  }\n  const receiveContainer=async()=>{\n    try{\n      showloader(true)\n      const received=await contract?.methods?.ReceiveContainer(selectedVaccine)?.send({from:accounts[0]})\n      if(received){\n        const _ended=vaccines?.filter(vacc=>(vacc.state==\"3\" && vacc.id!=selectedVaccine));\n        setEndedVaccines(_ended);\n        if(_ended.length)\n        setSelectedVaccine(parseInt(_ended[0].id))\n        \n      }\n    }\n    catch(err){\n      console.log(err)\n    }\n    finally{\n      showloader(false)\n    }\n  }\n \n \n    \nreturn <RootContainer heading={\"Vaccination Center\"} selectedVaccine={selectedVaccine} address={accounts && accounts[0]}> \n           <SelectComp vaccines={endedVaccines} selectedVaccine={selectedVaccine} handleSelect={handleSelect} />\n           <ButtonComp disabled={loader} loader={loader} text={\"Container Received\"} onClick={receiveContainer}/> \n       </RootContainer>\n  \n}\nexport default VaccCenter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}