{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gpsha\\\\Downloads\\\\vaccine-dapp-main\\\\vaccine-dapp-main\\\\client\\\\src\\\\Screens\\\\Distributor\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport { ButtonComp, RootContainer, SelectComp, TextInpComp } from '../../components/Shared';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Distributor = () => {\n  _s();\n  const {\n    state: {\n      accounts,\n      contract,\n      vaccines\n    }\n  } = useEth();\n  const [selectedVaccine, setSelectedVaccine] = useState(0);\n  const [createdVaccines, setCreatedVaccines] = useState([]);\n  const [loader, showloader] = useState(false);\n  useEffect(() => {\n    //  window.location.reload()\n  }, []);\n  useEffect(() => {\n    var _created$;\n    const _created = vaccines === null || vaccines === void 0 ? void 0 : vaccines.filter(vacc => vacc.state == \"1\" || vacc.state == \"2\");\n    setCreatedVaccines(_created);\n    setSelectedVaccine(parseInt((_created$ = _created[0]) === null || _created$ === void 0 ? void 0 : _created$.id));\n  }, [vaccines]);\n  const handleSelect = val => {\n    setSelectedVaccine(val);\n  };\n  const startDelivery = async () => {\n    try {\n      var _contract$methods, _contract$methods$Sta;\n      showloader(true);\n      const create = await (contract === null || contract === void 0 ? void 0 : (_contract$methods = contract.methods) === null || _contract$methods === void 0 ? void 0 : (_contract$methods$Sta = _contract$methods.StartDelivery(selectedVaccine)) === null || _contract$methods$Sta === void 0 ? void 0 : _contract$methods$Sta.send({\n        from: accounts[0]\n      }));\n      console.log(create);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      showloader(false);\n    }\n  };\n  const endDelivery = async () => {\n    try {\n      var _contract$methods2, _contract$methods2$En;\n      showloader(true);\n      const create = await (contract === null || contract === void 0 ? void 0 : (_contract$methods2 = contract.methods) === null || _contract$methods2 === void 0 ? void 0 : (_contract$methods2$En = _contract$methods2.EndDelivery(selectedVaccine)) === null || _contract$methods2$En === void 0 ? void 0 : _contract$methods2$En.send({\n        from: accounts[0]\n      }));\n      if (create) {\n        const _created = vaccines === null || vaccines === void 0 ? void 0 : vaccines.filter(vacc => (vacc.state == \"1\" || vacc.state == \"2\") && vacc.id != selectedVaccine);\n        setCreatedVaccines(_created);\n        if (_created.length) setSelectedVaccine(parseInt(_created[0].id));\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      showloader(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(RootContainer, {\n    heading: \"Distributor\",\n    address: accounts && accounts[0],\n    children: [/*#__PURE__*/_jsxDEV(SelectComp, {\n      vaccines: createdVaccines,\n      selectedVaccine: selectedVaccine,\n      handleSelect: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(ButtonComp, {\n      disabled: loader,\n      loader: loader,\n      text: 'Start Delivery',\n      onClick: startDelivery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(ButtonComp, {\n      disabled: loader,\n      loader: loader,\n      text: 'End Delivery',\n      onClick: endDelivery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 8\n  }, this);\n};\n_s(Distributor, \"KrFLRzyTjEPy7UkJhhfHnrIgitM=\", false, function () {\n  return [useEth];\n});\n_c = Distributor;\nexport default Distributor;\nvar _c;\n$RefreshReg$(_c, \"Distributor\");","map":{"version":3,"names":["useState","useEffect","useEth","ButtonComp","RootContainer","SelectComp","TextInpComp","jsxDEV","_jsxDEV","Distributor","_s","state","accounts","contract","vaccines","selectedVaccine","setSelectedVaccine","createdVaccines","setCreatedVaccines","loader","showloader","_created$","_created","filter","vacc","parseInt","id","handleSelect","val","startDelivery","_contract$methods","_contract$methods$Sta","create","methods","StartDelivery","send","from","console","log","err","endDelivery","_contract$methods2","_contract$methods2$En","EndDelivery","length","heading","address","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gpsha/Downloads/vaccine-dapp-main/vaccine-dapp-main/client/src/Screens/Distributor/index.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport {ButtonComp,RootContainer,SelectComp,TextInpComp} from '../../components/Shared';\n\nconst Distributor=()=>{\n    const { state: { accounts,contract,vaccines} } = useEth();\n    const [selectedVaccine,setSelectedVaccine]=useState(0);  \n    const [createdVaccines,setCreatedVaccines]=useState([]);\n    const [loader,showloader]=useState(false);\n\n    useEffect(()=>{\n    //  window.location.reload()\n    },[])\n    useEffect(()=>{\n      const _created=vaccines?.filter(vacc=>(vacc.state==\"1\" || vacc.state==\"2\"));\n      setCreatedVaccines(_created);\n      setSelectedVaccine(parseInt(_created[0]?.id))\n      \n    \n    },[vaccines])\n    const handleSelect=(val)=>{\n      setSelectedVaccine(val)\n  }\n  const startDelivery=async()=>{\n    try{\n      showloader(true)\n      const create=await contract?.methods?.StartDelivery(selectedVaccine)?.send({from:accounts[0]})\n    console.log(create)\n    }\n    catch(err){\n      console.log(err)\n    }\n    finally{\n      showloader(false)\n    }\n  }\n  const endDelivery=async()=>{\n    try{\n      showloader(true)\n      const create=await contract?.methods?.EndDelivery(selectedVaccine)?.send({from:accounts[0]})\n      if(create){\n        const _created=vaccines?.filter(vacc=>((vacc.state==\"1\" || vacc.state==\"2\") && vacc.id!=selectedVaccine));\n        setCreatedVaccines(_created);\n        if(_created.length)\n        setSelectedVaccine(parseInt(_created[0].id))\n        \n\n      }\n    }\n    catch(err){\n      console.log(err)\n    }\n    finally{\n      showloader(false)\n    }\n  }\nreturn <RootContainer heading={\"Distributor\"} address={accounts && accounts[0]}> \n           <SelectComp vaccines={createdVaccines} selectedVaccine={selectedVaccine} handleSelect={handleSelect} />\n           <ButtonComp disabled={loader} loader={loader}  text={'Start Delivery'} onClick={startDelivery}/>\n           <ButtonComp disabled={loader} loader={loader} text={'End Delivery'} onClick={endDelivery}/>\n  </RootContainer>\n}\nexport default Distributor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}