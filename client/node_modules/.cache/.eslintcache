[{"C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\index.js":"1","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\App.jsx":"2","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\contexts\\EthContext\\index.js":"3","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\Screens\\VaccCenter\\index.jsx":"4","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\Screens\\TrackContainer\\index.jsx":"5","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\Screens\\Distributor\\index.jsx":"6","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\Screens\\Container\\index.jsx":"7","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Home\\index.jsx":"8","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\Screens\\Manufacturer\\index.jsx":"9","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\contexts\\EthContext\\EthContext.js":"10","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\contexts\\EthContext\\useEth.js":"11","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\contexts\\EthContext\\state.js":"12","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\contexts\\EthContext\\EthProvider.jsx":"13","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Shared\\index.js":"14","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\VaccPipeline\\index.jsx":"15","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Shared\\Spinner.js":"16","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Shared\\TextInpCom.jsx":"17","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Shared\\RootContainer.jsx":"18","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Shared\\ButtonComp.jsx":"19","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Shared\\SelectComp.jsx":"20"},{"size":308,"mtime":1738438060146,"results":"21","hashOfConfig":"22"},{"size":1067,"mtime":1738438060084,"results":"23","hashOfConfig":"22"},{"size":181,"mtime":1738438061024,"results":"24","hashOfConfig":"22"},{"size":1625,"mtime":1738438060308,"results":"25","hashOfConfig":"22"},{"size":1461,"mtime":1738438060281,"results":"26","hashOfConfig":"22"},{"size":2072,"mtime":1738438060225,"results":"27","hashOfConfig":"22"},{"size":1932,"mtime":1738438060193,"results":"28","hashOfConfig":"22"},{"size":3447,"mtime":1738438060605,"results":"29","hashOfConfig":"22"},{"size":2464,"mtime":1738438060256,"results":"30","hashOfConfig":"22"},{"size":104,"mtime":1738438060970,"results":"31","hashOfConfig":"22"},{"size":145,"mtime":1738438061083,"results":"32","hashOfConfig":"22"},{"size":439,"mtime":1738438061060,"results":"33","hashOfConfig":"22"},{"size":4436,"mtime":1738438061002,"results":"34","hashOfConfig":"22"},{"size":262,"mtime":1738438060901,"results":"35","hashOfConfig":"22"},{"size":1368,"mtime":1738438060934,"results":"36","hashOfConfig":"22"},{"size":263,"mtime":1738438060849,"results":"37","hashOfConfig":"22"},{"size":650,"mtime":1738438060874,"results":"38","hashOfConfig":"22"},{"size":1222,"mtime":1738438060791,"results":"39","hashOfConfig":"22"},{"size":1502,"mtime":1738438060763,"results":"40","hashOfConfig":"22"},{"size":1312,"mtime":1738438060820,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14cnjzw",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\index.js",[],"C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\App.jsx",[],"C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\contexts\\EthContext\\index.js",[],"C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\Screens\\VaccCenter\\index.jsx",["90","91","92","93"],"import { useState, useEffect } from 'react';\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport {ButtonComp,RootContainer,SelectComp,TextInpComp} from '../../components/Shared';\nconst VaccCenter=()=>{\n    const { state: { accounts,contract,vaccines} } = useEth();\n    const [selectedVaccine,setSelectedVaccine]=useState(0);  \n    const [endedVaccines,setEndedVaccines]=useState([]);\n    const [loader,showloader]=useState(false);\n    \n    useEffect(()=>{\n     let _ended= vaccines?.filter(vacc=>(vacc.state==\"3\"));\n     setEndedVaccines(_ended);\n     setSelectedVaccine(parseInt(_ended[0]?.id))\n  \n    \n    },[vaccines])\n    const handleSelect=(val)=>{\n      setSelectedVaccine(val)\n  }\n  const receiveContainer=async()=>{\n    try{\n      showloader(true)\n      const received=await contract?.methods?.ReceiveContainer(selectedVaccine)?.send({from:accounts[0]})\n      if(received){\n        const _ended=vaccines?.filter(vacc=>(vacc.state==\"3\" && vacc.id!=selectedVaccine));\n        setEndedVaccines(_ended);\n        if(_ended.length)\n        setSelectedVaccine(parseInt(_ended[0].id))\n        \n      }\n    }\n    catch(err){\n      console.log(err)\n    }\n    finally{\n      showloader(false)\n    }\n  }\n \n \n    \nreturn <RootContainer heading={\"Vaccination Center\"} selectedVaccine={selectedVaccine} address={accounts && accounts[0]}> \n           <SelectComp vaccines={endedVaccines} selectedVaccine={selectedVaccine} handleSelect={handleSelect} />\n           <ButtonComp disabled={loader} loader={loader} text={\"Container Received\"} onClick={receiveContainer}/> \n       </RootContainer>\n  \n}\nexport default VaccCenter;","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\Screens\\TrackContainer\\index.jsx",["94"],"import { useState, useEffect } from 'react';\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport {ButtonComp,RootContainer,SelectComp} from '../../components/Shared';\nimport HorizontalStepperWithError from '../../components/VaccPipeline';\nconst TrackContainer=()=>{\n    const { state: { accounts,contract,vaccines} } = useEth();\n    const [selectedVaccine,setSelectedVaccine]=useState(0); \n  const [step,setStep]=useState(0);\n  const [show,setShow]=useState(false);\n  const [loader,showloader]=useState(false);\n\n  useEffect(()=>{\n    if(show)\n     trackContainer()\n   },[show,selectedVaccine,step])\n    const handleSelect=(val)=>{\n      setSelectedVaccine(val)\n  }\n\n  const trackContainer=async()=>{\n    console.log(selectedVaccine)\n    try{\n  const _vacc=await contract?.methods?.vaccine(selectedVaccine)?.call({from:accounts[0]})\n  setStep(parseInt(_vacc.state))\n    }\n    catch(err){\n      console.log(err)\n    }\n    finally{\n      showloader(false)\n    }\n}\n \n    \nreturn <> <RootContainer heading={\"Track Containers\"} selectedVaccine={selectedVaccine} address={accounts && accounts[0]}> \n           <SelectComp vaccines={vaccines} selectedVaccine={selectedVaccine} handleSelect={handleSelect} />\n           <ButtonComp disabled={loader} loader={loader}  text={\"Show Track\"} onClick={()=>setShow(!show)}/> \n          \n       </RootContainer>\n       {show && <HorizontalStepperWithError step={step} />}\n       </>\n  \n}\nexport default TrackContainer;","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\Screens\\Distributor\\index.jsx",["95","96","97","98","99","100"],"import { useState, useEffect } from 'react';\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport {ButtonComp,RootContainer,SelectComp,TextInpComp} from '../../components/Shared';\n\nconst Distributor=()=>{\n    const { state: { accounts,contract,vaccines} } = useEth();\n    const [selectedVaccine,setSelectedVaccine]=useState(0);  \n    const [createdVaccines,setCreatedVaccines]=useState([]);\n    const [loader,showloader]=useState(false);\n\n    useEffect(()=>{\n    //  window.location.reload()\n    },[])\n    useEffect(()=>{\n      const _created=vaccines?.filter(vacc=>(vacc.state==\"1\" || vacc.state==\"2\"));\n      setCreatedVaccines(_created);\n      setSelectedVaccine(parseInt(_created[0]?.id))\n      \n    \n    },[vaccines])\n    const handleSelect=(val)=>{\n      setSelectedVaccine(val)\n  }\n  const startDelivery=async()=>{\n    try{\n      showloader(true)\n      const create=await contract?.methods?.StartDelivery(selectedVaccine)?.send({from:accounts[0]})\n    console.log(create)\n    }\n    catch(err){\n      console.log(err)\n    }\n    finally{\n      showloader(false)\n    }\n  }\n  const endDelivery=async()=>{\n    try{\n      showloader(true)\n      const create=await contract?.methods?.EndDelivery(selectedVaccine)?.send({from:accounts[0]})\n      if(create){\n        const _created=vaccines?.filter(vacc=>((vacc.state==\"1\" || vacc.state==\"2\") && vacc.id!=selectedVaccine));\n        setCreatedVaccines(_created);\n        if(_created.length)\n        setSelectedVaccine(parseInt(_created[0].id))\n        \n\n      }\n    }\n    catch(err){\n      console.log(err)\n    }\n    finally{\n      showloader(false)\n    }\n  }\nreturn <RootContainer heading={\"Distributor\"} address={accounts && accounts[0]}> \n           <SelectComp vaccines={createdVaccines} selectedVaccine={selectedVaccine} handleSelect={handleSelect} />\n           <ButtonComp disabled={loader} loader={loader}  text={'Start Delivery'} onClick={startDelivery}/>\n           <ButtonComp disabled={loader} loader={loader} text={'End Delivery'} onClick={endDelivery}/>\n  </RootContainer>\n}\nexport default Distributor;","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\Screens\\Container\\index.jsx",["101","102","103","104"],"import { useState, useEffect } from 'react';\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport {ButtonComp,RootContainer,SelectComp,TextInpComp} from '../../components/Shared';\n\nconst Container=()=>{\n    const { state: { accounts,contract,vaccines} } = useEth();\n    const [selectedVaccine,setSelectedVaccine]=useState(0);  \n    const [startedVaccines,setStartedVaccines]=useState([]);\n    const [loader,showloader]=useState(false);\n    \n    useEffect(()=>{\n     let _selected= vaccines?.filter(vacc=>(vacc.state==\"2\"));\n     setStartedVaccines(_selected);\n     setSelectedVaccine(parseInt(_selected[0]?.id))\n  \n    \n    },[vaccines])\n    const handleSelect=(val)=>{\n      setSelectedVaccine(val)\n  }\n  const handleViolation=async(type, val)=>{\n    try{\n      showloader(true)\n      const violated=await contract?.methods?.violationOccurrence(selectedVaccine,type,val)?.send({from:accounts[0]})\n      if(violated){\n        const _violate=vaccines?.filter(vacc=>(( vacc.state==\"2\") && vacc.id!=selectedVaccine));\n        setStartedVaccines(_violate);\n        if(_violate.length)\n        setSelectedVaccine(parseInt(_violate[0].id))\n        \n\n      }\n    }\n    catch(err){\n      console.log(err)\n    }\n    finally{\n      showloader(false)\n    }\n  }\n \n  const BUTTONS=[\n    {\n     text:'Temperature Violated',\n     type:1\n    },\n    {\n      text:'Container Disclosed',\n      type:2\n     },\n     {\n      text:'Container Exposed',\n      type:3\n     },\n     {\n      text:'Container Route Changed',\n      type:4\n     },\n    ]\nreturn <RootContainer heading={\"Container\"} address={accounts && accounts[0]}> \n           <SelectComp vaccines={startedVaccines} selectedVaccine={selectedVaccine} handleSelect={handleSelect} />\n           {BUTTONS.map(btn=>{\n           return <ButtonComp disabled={loader} loader={loader}  text={btn.text} onClick={()=>handleViolation(btn.type,12)}/>})}\n  </RootContainer>\n}\nexport default Container;","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Home\\index.jsx",["105"],"import img from '../../assets/covid2.jpg';\nimport { Box, Stack, Typography } from '@mui/material';\nimport { useNavigate } from \"react-router-dom\";\nimport { ButtonComp } from '../Shared';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport \"../../css/index.css\";\nconst styles={\n    // root: {\n    //     // backgroundImage: `url(${img})`,\n    //     // backgroundSize: \"cover\",\n    //     // opacity:0.1,\n    //     // backgroundColor: \"rgba(0,0,0,0.1)\",\n        \n    //     position: \"fixed\",\n    //     top: 0,\n    //     left: 0,\n    //     right: 0,\n    //     bottom: 0,\n    //     width: \"100%\",\n    //     height: \"100%\",\n    //     backgroundRepeat: \"no-repeat\",\n    //     backgroundColor: 'transparent',\n    //     display: \"flex\",\n    //     justifyContent: \"flex-start\",\n    //     alignItems: 'flex-start'\n    // },\n        head: {\n            // color: \"black\",\n            position:\"relative\",\n            textAlign: \"center\",\n            margin:\"8em 4em 6em 7em\",\n            width:\"450px\",\n            // maxWidth:\"0%\",\n            minWidth:\"30%\",\n            padding: \"6em 2em\",\n            display:\"flex\",\n            flexDirection:\"column\",\n            justifyContent: \"center\",\n            alignItems: 'center',\n            backgroundColor: \"rgba(240, 240, 240,0.6)\",\n            \n\n        },\n        sub:{\n            fontWeight:\"bold\",\n            fontSize:\"2em\"\n        }\n  }\nconst Home=()=>{\n  const navigate=useNavigate();\n  const BUTTONS=[\n    {\n     text:'Manufacturer',\n     path:'/manufacturer'\n    },\n    {\n      text:'Distributor',\n      path:'/distributor'\n     },\n     {\n      text:'Container',\n      path:'/container'\n     },\n     {\n      text:'Vaccine Center',\n      path:'/vaccine_center'\n     },\n     {\n      text:'Track Containers',\n      path:'/track_container'\n     }\n]\n  return  <Box className=\"root\">\n            <Box sx={styles.head}>\n                <Typography  sx={{fontWeight:\"bold\",fontFamily:\"Cabin, sans-serif\", fontSize:\"3rem\"}} mb={3} >Welcome to <br />Vaccination Dapp</Typography>\n                <Stack spacing={1} sx={{width:\"60%\", minWidth:\"100%\"}} direction=\"column\">\n                    {/* <Typography  sx={styles.sub}  >Continue as</Typography> */}\n                    {BUTTONS.map((btn,index)=>{\n                      return <ButtonComp key={index}\n                                         endIcon={<ArrowForwardIcon sx={{ fontSize:\"1em\"}}/>}\n                                         style={{width:\"100%\",\n                                         justifyContent:\"space-between\"}}\n                                         greyBtn onClick={()=>navigate(btn.path)} \n                                         text={btn.text}/>\n                    })}\n                    {/* <ButtonComp endIcon={<ArrowForwardIcon sx={{   fontSize:\"1em\"}}/>} style={{width:\"100%\",justifyContent:\"space-between\"}} greyBtn onClick={()=>navigate('/distributor')} text={\"Distributor\"}/>\n                    <ButtonComp endIcon={<ArrowForwardIcon sx={{  fontSize:\"1em\"}}/>} greyBtn onClick={()=>navigate('/manufacturer')} text={\"Container\"}/>\n                    <ButtonComp endIcon={<ArrowForwardIcon sx={{  fontSize:\"1em\"}}/>} greyBtn onClick={()=>navigate('/manufacturer')} text={\"Vaccine Center\"}/> */}\n\n\n\n      {/* <BootstrapButton variant=\"contained\" disableRipple>\n        Bootstrap\n      </BootstrapButton> */}\n    </Stack>\n            </Box>\n            </Box>\n}\nexport default Home;","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\Screens\\Manufacturer\\index.jsx",["106","107","108","109"],"import { useState,useEffect } from 'react';\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport {ButtonComp,RootContainer,SelectComp,TextInpComp,Spinner} from '../../components/Shared';\n\nconst Manufacturer=()=>{\n    const { state: { accounts,contract,vaccines} } = useEth();  \n    const [selectedVaccine,setSelectedVaccine]=useState(0);\n    const [notReadyVacc,setNotReadyVacc]=useState([]);\n    const [distributor,setDistributor]=useState('');\n    const [loader,showloader]=useState(false);\n    useEffect(()=>{\n      const _notReady=vaccines?.filter(vacc=>(vacc.state==\"0\"));\n      setNotReadyVacc(_notReady);\n      setSelectedVaccine(parseInt(_notReady[0]?.id))\n    },[vaccines])\n\n    const handleSelect=(val)=>{\n        setSelectedVaccine(val)\n    }\n    const handleDistributor=(distr)=>{\n         setDistributor(distr)\n    }\n    const createContainer=async(e)=>{\n      try{\n        showloader(true)\n        const create=await contract?.methods?.CreateContainer(selectedVaccine)?.send({from:accounts[0]});\n        if(create){\n          const _notReady=vaccines?.filter(vacc=>{\n              console.log(vacc,\"vacc\")\n            return vacc.state==\"0\" && vacc.id!=selectedVaccine\n          });\n          setNotReadyVacc(_notReady);\n          if(_notReady.length)\n          setSelectedVaccine(parseInt(_notReady[0].id))\n\n        }\n      }\n      catch(err){\n        console.log(err)\n      }\n      finally{\n        showloader(false)\n      }\n      \n    }\n    const registerDistributor=async()=>{\n      try{\n        showloader(true)\n        const register=await contract?.methods?.distributorRegistration(distributor)?.send({from:accounts[0]})\n       console.log(register)\n      }\n      catch(err){\n        console.log(err)\n      }\n      finally{\n        showloader(false)\n      }\n    }\n    \n    return <RootContainer heading={\"Manufacturer\"} selectedVaccine={selectedVaccine} address={accounts && accounts[0]}>\n              <SelectComp vaccines={notReadyVacc} selectedVaccine={selectedVaccine} handleSelect={handleSelect} />\n              <ButtonComp disabled={loader} loader={loader} text={'Create Container'} onClick={createContainer} />\n              <TextInpComp placeholder={'Enter Distributor Address'} distributor={distributor} handleDistributor={handleDistributor}/>\n              <ButtonComp disabled={loader} loader={loader} text={'Register Distributor'} onClick={registerDistributor}/>\n          </RootContainer>\n}\n\nexport default Manufacturer;","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\contexts\\EthContext\\EthContext.js",[],"C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\contexts\\EthContext\\useEth.js",[],"C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\contexts\\EthContext\\state.js",[],"C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\contexts\\EthContext\\EthProvider.jsx",["110","111","112"],"import React, { useReducer, useCallback, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\nimport { ToastContainer,toast} from 'react-toastify';\nimport {Spinner} from '../../components/Shared';\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [loader,showloader]=useState(false);\n  const listenToTheViolationEvents=useCallback(\n    (contract)=>{\n      console.log(\"insideviolation\")\n    contract?.events?.ViolationEvent().on(\"data\",async(evt)=>{\n      if(evt.returnValues){\n        console.log(evt)\n        switch(evt.returnValues.vio_type){\n          case \"1\":\n            return toast.warning(\"Temprature of the container violated\");\n          case \"2\":\n            return toast.warning(\"Container opened while on track\");\n          case \"3\":\n            return toast.warning(\"Container has been exposed to light\"); \n          case \"4\":\n            return toast.warning(\"Container got sidetracked\"); \n            \n                 \n          default:\n            return toast.error(\"Something went wrong\")   \n\n        }\n      //  alert(evt)\n       \n      }\n      \n    })\n  })\n  const listenToTheVaccineEvent=useCallback(\n    (contract)=>{\n    console.log(contract,\"inside vaccine event\")\n    contract?.events?.VaccineChainStep().on(\"data\",async(evt)=>{\n      if(evt.returnValues){\n        console.log(evt)\n        switch(await evt.returnValues.step){\n          case \"0\":\n            return toast.success(\"Not ready for Delivery\");\n          case \"1\":\n            return toast.success(\"Container created and ready for delivery\");\n          case \"2\":\n            return toast.success(\"Container is on its track\"); \n          case \"3\":\n            return toast.success(\"Delivery of container has been ended\"); \n          case \"4\":\n              return toast.success(\"Container has been received\");  \n                 \n          default:\n            return toast.error(\"Something went wrong\")   \n\n        }\n      //  alert(evt)\n       \n      }\n      \n    })\n  })\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:7545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        const vaccines=[];\n        console.log(accounts,\"accounts\")\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          showloader(true)\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n          listenToTheVaccineEvent(contract);\n          const vaccineCount=await contract?.methods?.vaccineCount().call({from:accounts[0]})\n         \n          for(let i=0;i<vaccineCount;i++){\n            const res=await contract?.methods?.vaccine(i)?.call({from:accounts[0]})\n            vaccines.push({id:res.id,name:res.name,state:res.state})\n          }\n\n          showloader(false)\n          listenToTheViolationEvents(contract);\n\n          console.log(vaccines,vaccineCount)\n        } catch (err) {\n          showloader(false)\n          console.error(err);\n        }\n        // console.log(\"evets\")\n    \n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract,vaccines }\n        });\n      \n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/SmartContainer.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n    // useEffect(()=>{\n    //   toast.success(\"Checking!!!\")\n    //  },[])\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n      console.log(\"changes\")\n      window.location.reload();\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      <ToastContainer style={{ fontSize:\"1.4rem\" }} />\n      {loader?<Spinner />:children}\n    </EthContext.Provider>\n  );\n}\n\nexport default React.memo(EthProvider);\n","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Shared\\index.js",[],"C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\VaccPipeline\\index.jsx",["113"],"import * as React from 'react';\nimport { Container } from '@mui/system';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\n\nconst steps = ['Not Ready','Ready for delivery','On Track','Delivery Ended','Received','Violated'];\nconst CustomStepper = styled(Step)(() => ({\n    \"& .MuiStepLabel-label, & .MuiStepIcon-text\":{\n        fontSize: \"1.2rem\",\n\n    }\n    \n  }));\nexport default function HorizontalStepperWithError({step}) {\nconsole.log(step,\"setp\")\n  const isStepFailed = (ind) => {\n    if(step === 5 && ind==5)\n    return true\n    return false\n  };\n\n  return (\n    <Container maxWidth=\"md\" fluid mt=\"4em\"  >\n      <Stepper  activeStep={step}>\n        {steps.map((label, index) => {\n          const labelProps = {};\n          if (isStepFailed(index)) {\n            labelProps.optional = (\n              <Typography variant=\"caption\" color=\"error\">\n                Violation\n              </Typography>\n            );\n\n            labelProps.error = true;\n          }\n\n          return (\n            <CustomStepper  key={label}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </CustomStepper>\n          );\n        })}\n      </Stepper>\n    </Container>\n  );\n}\n","C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Shared\\Spinner.js",[],"C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Shared\\TextInpCom.jsx",[],"C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Shared\\RootContainer.jsx",[],"C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Shared\\ButtonComp.jsx",[],"C:\\Users\\gpsha\\Downloads\\vaccine-dapp-main\\vaccine-dapp-main\\client\\src\\components\\Shared\\SelectComp.jsx",[],{"ruleId":"114","severity":1,"message":"115","line":3,"column":45,"nodeType":"116","messageId":"117","endLine":3,"endColumn":56},{"ruleId":"118","severity":1,"message":"119","line":11,"column":52,"nodeType":"120","messageId":"121","endLine":11,"endColumn":54},{"ruleId":"118","severity":1,"message":"119","line":25,"column":56,"nodeType":"120","messageId":"121","endLine":25,"endColumn":58},{"ruleId":"118","severity":1,"message":"122","line":25,"column":72,"nodeType":"120","messageId":"121","endLine":25,"endColumn":74},{"ruleId":"123","severity":1,"message":"124","line":15,"column":6,"nodeType":"125","endLine":15,"endColumn":33,"suggestions":"126"},{"ruleId":"114","severity":1,"message":"115","line":3,"column":45,"nodeType":"116","messageId":"117","endLine":3,"endColumn":56},{"ruleId":"118","severity":1,"message":"119","line":15,"column":56,"nodeType":"120","messageId":"121","endLine":15,"endColumn":58},{"ruleId":"118","severity":1,"message":"119","line":15,"column":75,"nodeType":"120","messageId":"121","endLine":15,"endColumn":77},{"ruleId":"118","severity":1,"message":"119","line":42,"column":59,"nodeType":"120","messageId":"121","endLine":42,"endColumn":61},{"ruleId":"118","severity":1,"message":"119","line":42,"column":78,"nodeType":"120","messageId":"121","endLine":42,"endColumn":80},{"ruleId":"118","severity":1,"message":"122","line":42,"column":95,"nodeType":"120","messageId":"121","endLine":42,"endColumn":97},{"ruleId":"114","severity":1,"message":"115","line":3,"column":45,"nodeType":"116","messageId":"117","endLine":3,"endColumn":56},{"ruleId":"118","severity":1,"message":"119","line":12,"column":55,"nodeType":"120","messageId":"121","endLine":12,"endColumn":57},{"ruleId":"118","severity":1,"message":"119","line":26,"column":60,"nodeType":"120","messageId":"121","endLine":26,"endColumn":62},{"ruleId":"118","severity":1,"message":"122","line":26,"column":77,"nodeType":"120","messageId":"121","endLine":26,"endColumn":79},{"ruleId":"114","severity":1,"message":"127","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":11},{"ruleId":"114","severity":1,"message":"128","line":3,"column":57,"nodeType":"116","messageId":"117","endLine":3,"endColumn":64},{"ruleId":"118","severity":1,"message":"119","line":12,"column":57,"nodeType":"120","messageId":"121","endLine":12,"endColumn":59},{"ruleId":"118","severity":1,"message":"119","line":30,"column":30,"nodeType":"120","messageId":"121","endLine":30,"endColumn":32},{"ruleId":"118","severity":1,"message":"122","line":30,"column":46,"nodeType":"120","messageId":"121","endLine":30,"endColumn":48},{"ruleId":"123","severity":1,"message":"129","line":11,"column":36,"nodeType":"116","endLine":11,"endColumn":47},{"ruleId":"123","severity":1,"message":"129","line":38,"column":33,"nodeType":"116","endLine":38,"endColumn":44},{"ruleId":"123","severity":1,"message":"130","line":104,"column":8,"nodeType":"125","endLine":104,"endColumn":10,"suggestions":"131"},{"ruleId":"118","severity":1,"message":"119","line":20,"column":25,"nodeType":"120","messageId":"121","endLine":20,"endColumn":27},"no-unused-vars","'TextInpComp' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'trackContainer'. Either include it or remove the dependency array.","ArrayExpression",["132"],"'img' is defined but never used.","'Spinner' is defined but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useCallback has missing dependencies: 'listenToTheVaccineEvent' and 'listenToTheViolationEvents'. Either include them or remove the dependency array.",["133"],{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [show, selectedVaccine, step, trackContainer]",{"range":"138","text":"139"},"Update the dependencies array to be: [listenToTheVaccineEvent, listenToTheViolationEvents]",{"range":"140","text":"141"},[580,607],"[show, selectedVaccine, step, trackContainer]",[3449,3451],"[listenToTheVaccineEvent, listenToTheViolationEvents]"]